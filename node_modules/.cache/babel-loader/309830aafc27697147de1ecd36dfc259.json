{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bohdanartiukhov/Desktop/frontend/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { sendNewMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogsReducer\";\n\nconst Dialogs = props => {\n  let state = props.store.getState().dialogsPage;\n  let dialogElement = state.dialogs.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 51\n  }, this));\n  let messageElement = state.messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n    message: message.message,\n    id: message.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 54\n  }, this));\n  let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendNewMessageCreator());\n  };\n\n  let onNewMessageChange = e => {\n    let body = e.target.value;\n    props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogsItems,\n      children: dialogElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messageElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newMessageBody,\n          onChange: onNewMessageChange,\n          placeholder: \"enter your massage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSendMessageClick,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/bohdanartiukhov/Desktop/frontend/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","DialogItem","Message","sendNewMessageCreator","updateNewMessageBodyCreator","Dialogs","props","state","store","getState","dialogsPage","dialogElement","dialogs","map","dialog","name","id","messageElement","messages","message","newMessageBody","onSendMessageClick","dispatch","onNewMessageChange","e","body","target","value","dialogsItems"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,qBAAR,EAA+BC,2BAA/B,QAAiE,4BAAjE;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;AAEA,MAAIC,aAAa,GAAGJ,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAkBC,MAAM,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,UAA5B,CAApB;AACA,MAAIC,cAAc,GAAGV,KAAK,CAACW,QAAN,CAAeL,GAAf,CAAmBM,OAAO,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAO,CAACA,OAA1B;AAAmC,IAAA,EAAE,EAAIA,OAAO,CAACH;AAAjD;AAAA;AAAA;AAAA;AAAA,UAA9B,CAArB;AACA,MAAII,cAAc,GAAGb,KAAK,CAACa,cAA3B;;AAEA,MAAIC,kBAAkB,GAAG,MAAM;AAC/Bf,IAAAA,KAAK,CAACE,KAAN,CAAYc,QAAZ,CAAqBnB,qBAAqB,EAA1C;AACC,GAFD;;AAGF,MAAIoB,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACArB,IAAAA,KAAK,CAACE,KAAN,CAAYc,QAAZ,CAAqBlB,2BAA2B,CAACqB,IAAD,CAAhD;AACC,GAHH;;AAKE,sBACE;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAACY,OAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAAC4B,YAAxB;AAAA,gBAAuCjB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACkB,QAAxB;AAAA,8BACE;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAU,UAAA,KAAK,EAAIG,cAAnB;AAAmC,UAAA,QAAQ,EAAEG,kBAA7C;AAAiE,UAAA,WAAW,EAAG;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAEF,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7BD;;KAAMhB,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {sendNewMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogsReducer\";\n\nconst Dialogs = props => {\n  let state = props.store.getState().dialogsPage;\n  \n  let dialogElement = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\n  let messageElement = state.messages.map(message => <Message message={message.message} id = {message.id}/>);\n  let newMessageBody = state.newMessageBody;\n  \n  let onSendMessageClick = () => {\n  props.store.dispatch(sendNewMessageCreator());\n  };\nlet onNewMessageChange = (e) => {\n  let body = e.target.value;\n  props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>{dialogElement}</div>\n      <div className={classes.messages}>\n        <div>{messageElement}</div>\n        <div>\n          <textarea value = {newMessageBody} onChange={onNewMessageChange} placeholder = 'enter your massage'></textarea>\n          <div>\n            <button onClick={onSendMessageClick}>Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n"]},"metadata":{},"sourceType":"module"}